---
layout: post
title: Main Menu and Game Over Screen
date: 2017-11-02T13:30:00.000Z
author: Connor King
categories:
  - Blog
  - Low-Level Programming
  - Development
  - Snake
img: snake.png
thumb: c_thumb.jpg
published: true
---

<b>Day 4 </b>Added a main menu and a game over screen.<!--more-->

Menu system with only press space to start and game over screen where you press space to restart the game. This is a simple implementation of a menu, it loads a sprite screen and when space is pressed it initializes the game and stops rendering the menu screen. When the game ends, another screen is loaded which also shows the score and high score, like the menu screen you can just press space to re-initialize the game and start again.

#### How does it work?
```C++
if (action == ASGE::KEYS::KEY_PRESSED)
{		
	switch (key)
	{
		case ASGE::KEYS::KEY_SPACE:
			game_action = GameAction::PLAY;
			break;
	}
}

void SnakeGame::processGameActions()
{
	switch (game_action)
	{
	case GameAction::PLAY:
		this->play();
		break;
	}
}

bool SnakeGame::play()
{
	if (sprite)
	{
		delete sprite;
		sprite = nullptr;
	}

	renderer->setWindowTitle("Snake - Game 2");

	// input callback function
	callback_id = this->inputs->addCallbackFnc(ASGE::EventType::E_KEY, &SnakeGame::input, this);

	// load snake background sprite
	sprite = renderer->createRawSprite();
	sprite->position[0] = 0;
	sprite->position[1] = 0;
	sprite->scalar = 1.10f;

	if (!sprite->loadTexture("..\\..\\Resources\\Textures\\background.png"))
	{
		return false;
	}

	if (!playing)
	{
		UI* score = new UI(50, 35, "Score:");
		hud[0] = score;
		UI* score2 = new UI(200, 35, "0");
		hud[1] = score2;
		UI* score3 = new UI(1200, 35, this->getScore(highScore));
		hud[2] = score3;
		UI* score4 = new UI(950, 35, "High Score:");
		hud[3] = score4;


		Body* body1 = new Body(600, 350);
		BodyVector.push_back(*body1);

		generateApples();
		
		playing = true;
	}
	return true;
}
```
