---
layout: post
title: Score System
date: 2017-12-09T13:30:00.000Z
author: Connor King
categories:
  - Blog
  - Low-Level Programming
  - Development
  - Endless Runner
img: run.png
thumb: c_thumb.jpg
published: true
---

<b>Day 5 </b>Adding a score system and reading from a file.<!--more-->

I implemented a score system by adding 1 each time update ran, this allowed for a quick and satisfying score system. The score would show on screen and if the score was higher than the high score, high score would update as well. When the player dies, the high score is written to a file. When the game is booted up, the high score is taken from that file to allow for a constant high score even between closing and opening the game. 

#### Reading and Writing to File
```C++
void EndlessGame::readHighScore()
{
	std::string line;
	std::ifstream myfile("..\\..\\Resources\\highscore.txt");
	if (myfile.is_open())
	{
		while (getline(myfile, line))
		{
			high_score = std::stoi(line);
		}
		myfile.close();
	}
}

void EndlessGame::writeHighScore(int high_score)
{
	std::ofstream myfile("..\\..\\Resources\\highscore.txt");
	if (myfile.is_open())
	{
		myfile << high_score;
		myfile.close();
	}
}
```

#### Adding Score
```C++
void EndlessGame::addScore(const ASGE::GameTime & us)
{
	score += 1;
	hud[1]->text = this->getScore(score);
	if (score > high_score)
	{
		high_score = score;
		hud[2]->text = this->getScore(high_score);
	}
}
```