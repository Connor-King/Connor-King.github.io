---
layout: post
title: Unit Updates
date: 2018-04-05T13:30:00.000Z
author: Connor King
categories:
  - Blog
  - Low-Level Programming
  - Development
  - Network
img: network.png
thumb: c_thumb.jpg
published: true
---

<b>Day 4 </b>Adding a unit updater for the network.<!--more-->

Added a function for creating and sending packets for each unit and receiving and applying the updates, currently we only have hit points but this function can easily add more. Fixed issue with the map no generating when connecting. The issue was caused by the seed sometimes being 0 which caused the map not to generate, simple fix, add 1 to the seed.

#### Send Unit Packets
```C++
void Level1::sendPackets()
{
	for (int i = 0; i < 2; i++)
		{
			MyPacket unit_stats(8);
			//unit_stats << 50;
			unit_stats << 998;
			unit_stats << unit[i]->hit_points;
			network.client.send_packet(0, 
				reinterpret_cast<const enet_uint8*>(unit_stats.packet_data.data()), 
				unit_stats.packet_data.size(), ENET_PACKET_FLAG_RELIABLE);
		}
}	
```

#### Update Units
```C++
void Level1::updateUnits()
{
	while (!vec_unit_pack.empty())
	{
		vec_unit_pack[0] >> unit[unit_iter]->hit_points;		
		vec_unit_pack.pop_front();
		unit_iter++;
		if (unit_iter > 1)
		{
			unit_iter = 0;
		}
	}
}
```